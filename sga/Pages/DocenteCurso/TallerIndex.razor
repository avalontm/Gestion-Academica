@page "/docente/curso/taller/{taller_codigo}"
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject NavigationManager NavigationManager
@inject IJSRuntime jsRuntime

<!-- Seccion donde el docente creara las tareas/trabajos del taller para el curso seleccionado -->

<div class="container">

    <div class="container-spacing">
        <h2>@curso?.nombre - <b>@taller?.nombre</b></h2>
    </div>

</div>

@code {
    [ParameterAttribute]
    public string? taller_codigo { set; get; }
    [Inject] IToastService? toastService { set; get; }
    AuthModel auth { set; get; } = new();
    Taller taller { set; get; }
    Curso curso { set; get; }
    List<Tarea> tareas { set; get; }
    DialogDefault? dialog;
    DialogModel? dialogModel;

    protected async override Task OnInitializedAsync()
    {
        auth = await this.GetAuth(GetAuthenticationStateAsync);

        if (!auth.status)
        {
            NavigationManager.NavigateTo("/account", true);
            return;
        }

        onLoadTaller();
        StateHasChanged();
    }

    void onLoadTaller()
    {
        taller = Taller.Find(taller_codigo);

        if (taller != null)
        {
            if(taller.user_id != auth.user.id)
            {
                NavigationManager.NavigateTo("/denegado", true);
                return;
            }
        }

        curso = Curso.Find(taller.curso_id);

    }
}
