@page "/"
@using BlazorCalendar
@using BlazorCalendar.Models
@using System.Diagnostics;

@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject NavigationManager NavigationManager

<div class="container">
    @if (auth.status)
    {
        <div class="container-spacing">
            <h2>Tareas del mes</h2>
        </div>

        <div class="container-spacing">
            <CalendarContainer DisplayedView="DisplayedView.Monthly" TasksList="Tareas.ToArray()">
                <MonthlyView Months="months" Style="height:80vh"  PriorityDisplay="@PriorityDisplay" TaskClick="TaskClick" />
            </CalendarContainer>

        </div>

    }
    else
    {
        <div class="container-spacing">
            <h2>Para poder acceder al contenido es neserio identificar tu cuenta.</h2>
        </div>
    }
</div>


@code{
    AuthModel auth { set; get; } = new();
    private int months = 12;
    List<Tasks> Tareas { set; get; }
    PriorityLabel PriorityDisplay = PriorityLabel.Code;

    protected async override Task OnInitializedAsync()
    {
        auth = await this.GetAuth(GetAuthenticationStateAsync);

        if (!auth.status)
        {
            NavigationManager.NavigateTo("/account", true);
            return;
        }

        onLoadCalendario();
        StateHasChanged();
    }

    void onLoadCalendario()
    {
        DateTime today = DateTime.Now;

        Tareas = new()
        {
            new Tasks { ID = 1, DateStart = today.AddDays(8), DateEnd = today.AddDays(8), Code = "CP", Color = "#19C319", Caption = "Lorem ipsum dolor sit amet" },
            new Tasks { ID = 2, DateStart = today.AddDays(9), DateEnd = today.AddDays(9), Code = "DEV", Color = "#FFD800", Comment="on Teams template", Caption = "Fusce quis purus eu ante" },
            new Tasks { ID = 3, DateStart = today.AddDays(5), DateEnd = today.AddDays(5), Code = "DEV", Color = "#FFD800" },

            new Tasks { ID = 4, DateStart = today.AddDays(2), DateEnd = today.AddDays(2), Code = "FORM", Color = "#FFC3FF", Caption = "Ut sit amet turpis eget" } ,
            new Tasks { ID = 5, DateStart = today.AddDays(10).AddHours(8), DateEnd = today.AddDays(10).AddHours(9), Code = "MEETING", Color = "#2DD7D7", Comment="Julien's test" }
        };
    }

    void TaskClick(ClickTaskParameter clickTaskParameter)
    {
        foreach (int id in clickTaskParameter.IDList)
        {
            Debug.WriteLine($"Tarea : {id}");
        }
    }
}